/* REXX */
ADDRESS ISREDIT "MACRO PROCESS"

COPYLIB = 'LIB.ALL.SERX.BAS0.CPY'
CPYCNT = 0

/* LOOP THROUGH PROGRAM SOURCE */
ADDRESS ISREDIT
"(CURRLN) = LINENUM .ZCSR"  /*CURRENT LINE*/
"(LASTLN) = LINENUM .ZLAST"  /*LAST LINE NUMBER*/

I = 0
DO FOREVER
  I = I + 1
  IF I > LASTLN THEN LEAVE
  "(LINE) = LINE" I
  LINE = SUBSTR(LINE,7,64) /*COBOL SOURCE CODE BOUNDARIES*/
  CMD = SUBWORD(LINE,1,1)  /*FIRST WORD ON THE LINE*/
  CPY = SUBWORD(LINE,2,1)  /*SECOND WORD ON THE LINE*/
  CPY = STRIP(CPY,'T','.')  /*REMOVE TRAILING DOT*/
  CPY = STRIP(CPY,'B',"'")  /*REMOVE QUOTES*/

  REP_STR = 0
  /*CHECK IF COPYBOOK REPLACING STATEMENT PRESENT*/
  IF SUBWORD(LINE,3,1) = 'REPLACING' THEN
    IF SUBWORD(LINE,5,1) = 'BY' THEN
    DO
      OLD_STR = SUBWORD(LINE,4,1)
      NEW_STR = SUBWORD(LINE,6,1)
      REP_STR = 1
    END

  UPPER CMD
  IF DATATYPE(CMD) = 'NUM' THEN
  DO
    CMD = SUBWORD(LINE,3,1)
    CPY = SUBWORD(LINE,4,1)
    CPY = STRIP(CPY,'T','.')  /*REMOVE TRAILING DOT*/
    CPY = STRIP(CPY,'B',"'")  /*REMOVE QUOTES*/
    IF SUBWORD(LINE,5,1) = 'REPLACING' THEN
      IF SUBWORD(LINE,7,1) = 'BY' THEN
      DO
        OLD_STR = SUBWORD(LINE,6,1)
        NEW_STR = SUBWORD(LINE,8,1)
        REP_STR = 1
      END
  END

  IF REP_STR = 0 & CMD = 'COPY' THEN
  DO
    S = I + 1
    "(LINE) = LINE" S
    LINE  = SUBSTR(LINE,7,64)
    IF SUBWORD(LINE,1,1) = 'REPLACING' THEN
      IF SUBWORD(LINE,3,1) = 'BY' THEN
      DO
        OLD_STR = SUBWORD(LINE,2,1)
        NEW_STR = SUBWORD(LINE,4,1)
        REP_STR = 1
      END
  END

  IF CMD <> 'COPY' & CMD <> 'INCLUDE' THEN ITERATE
  CPY = STRIP(CPY,'L','&')
  CPY = STRIP(CPY,'T','_')
  CPY = STRIP(CPY,'T','.')
  IF REP_STR = 1 THEN
  DO
    OLD_STR = STRIP(OLD_STR,'B','=')
    NEW_STR = STRIP(NEW_STR,'T','.')
    NEW_STR = STRIP(NEW_STR,'B','=')
  END
  CALL EXPAND_COPYBOOK
END

"UP MAX"
"DOWN" CURRLN
ZEDLMSG = 'COPYBOOK(S) EXPANDED , USE UEXP TO REMOVE EXPANSIONS'
ADDRESS ISPEXEC "SETMSG MSG(ISR001)"
EXIT 0

EXPAND_COPYBOOK:
  /* CHECK COPYBOOK EXISTS */
  DSN = COPYLIB || "("CPY")"
  RC = SYSDSN("'"DSN"'")
  IF RC <> 'OK' THEN
  DO
    MSG = 'COPYBOOK NOT FOUND ' CPY
    "ISREDIT LINE_AFTER" | "= NOTELINE" MSG
    RETURN
  END
  CPYCNT = CPYCNT + 1

  /* READ COPYBOOK */
  ADDRESS TSO
  "ALLOC FI(IFILE) DA('"||DSN||"') SHR"
  "EXECIO * DISKR IFILE(STEM BOOK."
  "EXECIO 0 DISKW IFILE(FINIS"
  "FREE F(IFILE)"

  ADDRESS ISREDIT
  /* PASTE COPYBOOK INTO PROGRAM SOURCE */
  IF I < CURRLN THEN CURRLN = CURRLN + BOOK.0 /*COUNT NEW LINES*/
  LN = I
  P = 1
  D = +1
  MARK = '|++++|'
  TXT = '************EXPANDED LAYOUT FOR '
  MSG = '"' || MARK || TXT || CPY || ' START' || SUBSTR(TXT,1,9) '"'
  "ISREDIT LINE_AFTER "LN " = DATALINE" MSG
  LN = LN + 1

  DO J = 1 TO BOOK.0
    TXT = SUBSTR(BOOK.J,7,66)
    TXT = TRANSLATE(TXT,"'",'"')
    IF REP_STR =  1 THEN
      TXT = STRREPLACE(TXT,OLD_STR,NEW_STR)
    MSG = '"' || MARK || TXT || MARK || '"'
    "ISREDIT LINE_AFTER "LN "= DATALINE" MSG
    LN = LN + 1
  END

  TXT = '***********EXPANDED LAYOUT FOR '
  MSG = '"' || MARK || TXT || CPY || ' END ' || SUBSTR(TXT,1,9) '"'
  "ISREDIT LINE_AFTER "LN "= DATALINE" MSG
  LN = LN + 1
  LASTLN = LASTLN + BOOK.0 + 2 
  RETURN

STRREPLACE:
  ORIG_TXT = ARG(1)
  OLDVAL = ARG(2)
  NEWVAL = ARG(3)
  /* TEMP TEXT POINTER TO IDENTIFY TEXT TO BE REPLACED */
  TMPTXT = '1612PRAV9'
  NEW_STR = ORIG_TXT

  /* FIND OLD VALUE IF PRESENT AND REPLACE WITH NEW STR */
  DO WHILE POS(OLDVAL, NEWSTR) > 0
    NEWSTR = SUBSTR(NEWSTR,1,POS(OLDVAL,NEWSTR)-1) ||,
              TMPTXT ||,
              SUBSTR(NEWSTR,POS(OLDVAL,NEWSTR)+LENGTH(OLDVAL))
  END

  /* FIND TMPTXT VALUE IF PRESENT AND REPLACE WITH NEW VALUE */
  DO WHILE POS(TMPTXT,NEWSTR) > 0
    NEWSTR = SUBSTR(NEWSTR,1,POS(TMPTTXT,NEWSTR)-1 ||,
              NEWVAL ||,
              SUBSTR(NEWSTR,POS(TMPTXT,NEWSTR) + LENGTH(TMPTXT))
  END
  RETURN NEWSTR
